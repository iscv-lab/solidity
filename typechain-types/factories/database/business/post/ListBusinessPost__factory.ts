/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ListBusinessPost,
  ListBusinessPostInterface,
} from "../../../../database/business/post/ListBusinessPost";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "hashTag",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "content",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageSource",
            type: "string",
          },
          {
            internalType: "string",
            name: "job",
            type: "string",
          },
          {
            internalType: "enum BusinessPostStatus",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct BusinessPost",
        name: "item",
        type: "tuple",
      },
    ],
    name: "Add",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "hashTag",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "content",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageSource",
            type: "string",
          },
          {
            internalType: "string",
            name: "job",
            type: "string",
          },
          {
            internalType: "enum BusinessPostStatus",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct BusinessPost",
        name: "item",
        type: "tuple",
      },
    ],
    name: "Remove",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "hashTag",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "content",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageSource",
            type: "string",
          },
          {
            internalType: "string",
            name: "job",
            type: "string",
          },
          {
            internalType: "enum BusinessPostStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct BusinessPost",
        name: "item",
        type: "tuple",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "hashTag",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "content",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageSource",
            type: "string",
          },
          {
            internalType: "string",
            name: "job",
            type: "string",
          },
          {
            internalType: "enum BusinessPostStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct BusinessPost",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "destroy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllPosts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "hashTag",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "content",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageSource",
            type: "string",
          },
          {
            internalType: "string",
            name: "job",
            type: "string",
          },
          {
            internalType: "enum BusinessPostStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct BusinessPost[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "list",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "businessId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "hashTag",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "content",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageSource",
        type: "string",
      },
      {
        internalType: "string",
        name: "job",
        type: "string",
      },
      {
        internalType: "enum BusinessPostStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "retrive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "enum BusinessPostStatus",
        name: "value",
        type: "uint8",
      },
    ],
    name: "setBusinessPostStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000072620000666200007860201b60201c565b6200008060201b60201c565b62000218565b600033905090565b62000090620000ea60201b60201c565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b3373ffffffffffffffffffffffffffffffffffffffff16620001116200016c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200016a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016190620001f6565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620001de60208362000195565b9150620001eb82620001a6565b602082019050919050565b600060208201905081810360008301526200021181620001cf565b9050919050565b611d7380620002286000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806383197ef01161006657806383197ef01461014c5780638da5cb5b14610156578063daea85c514610174578063e0886f9014610190578063f2fde38b146101c05761009e565b80631affe4f7146100a35780632417450f146100bf57806330561100146100db57806352ab2037146100f957806380c9419e14610115575b600080fd5b6100bd60048036038101906100b891906112c4565b6101dc565b005b6100d960048036038101906100d4919061136b565b610301565b005b6100e3610364565b6040516100f09190611624565b60405180910390f35b610113600480360381019061010e9190611646565b610665565b005b61012f600480360381019061012a9190611686565b6106be565b60405161014398979695949392919061171b565b60405180910390f35b610154610943565b005b61015e610964565b60405161016b91906117c4565b60405180910390f35b61018e6004803603810190610189919061136b565b61098d565b005b6101aa60048036038101906101a59190611686565b6109ef565b6040516101b791906118a4565b60405180910390f35b6101da60048036038101906101d5919061136b565b610cd5565b005b6101e4610d58565b6002805490508160000181815250506002819080600181540180825580915050600190039060005260206000209060080201600090919091909150600082015181600001556020820151816001015560408201518160020190816102489190611ad2565b506060820151816003015560808201518160040190816102689190611ad2565b5060a082015181600501908161027e9190611ad2565b5060c08201518160060190816102949190611ad2565b5060e08201518160070160006101000a81548160ff021916908360038111156102c0576102bf611452565b5b021790555050507f0d5ee3861e0240d8a6d08d64672bed790ae1b3bc668354ffbf817ae2db0f3533816040516102f691906118a4565b60405180910390a150565b610309610e31565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101561065c57838290600052602060002090600802016040518061010001604052908160008201548152602001600182015481526020016002820180546103d0906118f5565b80601f01602080910402602001604051908101604052809291908181526020018280546103fc906118f5565b80156104495780601f1061041e57610100808354040283529160200191610449565b820191906000526020600020905b81548152906001019060200180831161042c57829003601f168201915b505050505081526020016003820154815260200160048201805461046c906118f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610498906118f5565b80156104e55780601f106104ba576101008083540402835291602001916104e5565b820191906000526020600020905b8154815290600101906020018083116104c857829003601f168201915b505050505081526020016005820180546104fe906118f5565b80601f016020809104026020016040519081016040528092919081815260200182805461052a906118f5565b80156105775780601f1061054c57610100808354040283529160200191610577565b820191906000526020600020905b81548152906001019060200180831161055a57829003601f168201915b50505050508152602001600682018054610590906118f5565b80601f01602080910402602001604051908101604052809291908181526020018280546105bc906118f5565b80156106095780601f106105de57610100808354040283529160200191610609565b820191906000526020600020905b8154815290600101906020018083116105ec57829003601f168201915b505050505081526020016007820160009054906101000a900460ff16600381111561063757610636611452565b5b600381111561064957610648611452565b5b8152505081526020019060010190610388565b50505050905090565b61066d610d58565b806002838154811061068257610681611ba4565b5b906000526020600020906008020160070160006101000a81548160ff021916908360038111156106b5576106b4611452565b5b02179055505050565b600281815481106106ce57600080fd5b90600052602060002090600802016000915090508060000154908060010154908060020180546106fd906118f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610729906118f5565b80156107765780601f1061074b57610100808354040283529160200191610776565b820191906000526020600020905b81548152906001019060200180831161075957829003601f168201915b505050505090806003015490806004018054610791906118f5565b80601f01602080910402602001604051908101604052809291908181526020018280546107bd906118f5565b801561080a5780601f106107df5761010080835404028352916020019161080a565b820191906000526020600020905b8154815290600101906020018083116107ed57829003601f168201915b50505050509080600501805461081f906118f5565b80601f016020809104026020016040519081016040528092919081815260200182805461084b906118f5565b80156108985780601f1061086d57610100808354040283529160200191610898565b820191906000526020600020905b81548152906001019060200180831161087b57829003601f168201915b5050505050908060060180546108ad906118f5565b80601f01602080910402602001604051908101604052809291908181526020018280546108d9906118f5565b80156109265780601f106108fb57610100808354040283529160200191610926565b820191906000526020600020905b81548152906001019060200180831161090957829003601f168201915b5050505050908060070160009054906101000a900460ff16905088565b61094b610e31565b3073ffffffffffffffffffffffffffffffffffffffff16ff5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610995610e31565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6109f7610f74565b6109ff610d58565b60028281548110610a1357610a12611ba4565b5b9060005260206000209060080201604051806101000160405290816000820154815260200160018201548152602001600282018054610a51906118f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7d906118f5565b8015610aca5780601f10610a9f57610100808354040283529160200191610aca565b820191906000526020600020905b815481529060010190602001808311610aad57829003601f168201915b5050505050815260200160038201548152602001600482018054610aed906118f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610b19906118f5565b8015610b665780601f10610b3b57610100808354040283529160200191610b66565b820191906000526020600020905b815481529060010190602001808311610b4957829003601f168201915b50505050508152602001600582018054610b7f906118f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610bab906118f5565b8015610bf85780601f10610bcd57610100808354040283529160200191610bf8565b820191906000526020600020905b815481529060010190602001808311610bdb57829003601f168201915b50505050508152602001600682018054610c11906118f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3d906118f5565b8015610c8a5780601f10610c5f57610100808354040283529160200191610c8a565b820191906000526020600020905b815481529060010190602001808311610c6d57829003601f168201915b505050505081526020016007820160009054906101000a900460ff166003811115610cb857610cb7611452565b5b6003811115610cca57610cc9611452565b5b815250509050919050565b610cdd610e31565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4390611c45565b60405180910390fd5b610d5581610ea8565b50565b60016000610d64610f6c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680610df05750610dba610964565b73ffffffffffffffffffffffffffffffffffffffff16610dd8610f6c565b73ffffffffffffffffffffffffffffffffffffffff16145b610e2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2690611cb1565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff16610e50610964565b73ffffffffffffffffffffffffffffffffffffffff1614610ea6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9d90611d1d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518061010001604052806000815260200160008152602001606081526020016000815260200160608152602001606081526020016060815260200160006003811115610fc557610fc4611452565b5b81525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61102d82610fe4565b810181811067ffffffffffffffff8211171561104c5761104b610ff5565b5b80604052505050565b600061105f610fcb565b905061106b8282611024565b919050565b600080fd5b6000819050919050565b61108881611075565b811461109357600080fd5b50565b6000813590506110a58161107f565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff8211156110d0576110cf610ff5565b5b6110d982610fe4565b9050602081019050919050565b82818337600083830152505050565b6000611108611103846110b5565b611055565b905082815260208101848484011115611124576111236110b0565b5b61112f8482856110e6565b509392505050565b600082601f83011261114c5761114b6110ab565b5b813561115c8482602086016110f5565b91505092915050565b6004811061117257600080fd5b50565b60008135905061118481611165565b92915050565b600061010082840312156111a1576111a0610fdf565b5b6111ac610100611055565b905060006111bc84828501611096565b60008301525060206111d084828501611096565b602083015250604082013567ffffffffffffffff8111156111f4576111f3611070565b5b61120084828501611137565b604083015250606061121484828501611096565b606083015250608082013567ffffffffffffffff81111561123857611237611070565b5b61124484828501611137565b60808301525060a082013567ffffffffffffffff81111561126857611267611070565b5b61127484828501611137565b60a08301525060c082013567ffffffffffffffff81111561129857611297611070565b5b6112a484828501611137565b60c08301525060e06112b884828501611175565b60e08301525092915050565b6000602082840312156112da576112d9610fd5565b5b600082013567ffffffffffffffff8111156112f8576112f7610fda565b5b6113048482850161118a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113388261130d565b9050919050565b6113488161132d565b811461135357600080fd5b50565b6000813590506113658161133f565b92915050565b60006020828403121561138157611380610fd5565b5b600061138f84828501611356565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6113cd81611075565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561140d5780820151818401526020810190506113f2565b60008484015250505050565b6000611424826113d3565b61142e81856113de565b935061143e8185602086016113ef565b61144781610fe4565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061149257611491611452565b5b50565b60008190506114a382611481565b919050565b60006114b382611495565b9050919050565b6114c3816114a8565b82525050565b6000610100830160008301516114e260008601826113c4565b5060208301516114f560208601826113c4565b506040830151848203604086015261150d8282611419565b915050606083015161152260608601826113c4565b506080830151848203608086015261153a8282611419565b91505060a083015184820360a08601526115548282611419565b91505060c083015184820360c086015261156e8282611419565b91505060e083015161158360e08601826114ba565b508091505092915050565b600061159a83836114c9565b905092915050565b6000602082019050919050565b60006115ba82611398565b6115c481856113a3565b9350836020820285016115d6856113b4565b8060005b8581101561161257848403895281516115f3858261158e565b94506115fe836115a2565b925060208a019950506001810190506115da565b50829750879550505050505092915050565b6000602082019050818103600083015261163e81846115af565b905092915050565b6000806040838503121561165d5761165c610fd5565b5b600061166b85828601611096565b925050602061167c85828601611175565b9150509250929050565b60006020828403121561169c5761169b610fd5565b5b60006116aa84828501611096565b91505092915050565b6116bc81611075565b82525050565b600082825260208201905092915050565b60006116de826113d3565b6116e881856116c2565b93506116f88185602086016113ef565b61170181610fe4565b840191505092915050565b611715816114a8565b82525050565b600061010082019050611731600083018b6116b3565b61173e602083018a6116b3565b818103604083015261175081896116d3565b905061175f60608301886116b3565b818103608083015261177181876116d3565b905081810360a083015261178581866116d3565b905081810360c083015261179981856116d3565b90506117a860e083018461170c565b9998505050505050505050565b6117be8161132d565b82525050565b60006020820190506117d960008301846117b5565b92915050565b6000610100830160008301516117f860008601826113c4565b50602083015161180b60208601826113c4565b50604083015184820360408601526118238282611419565b915050606083015161183860608601826113c4565b50608083015184820360808601526118508282611419565b91505060a083015184820360a086015261186a8282611419565b91505060c083015184820360c08601526118848282611419565b91505060e083015161189960e08601826114ba565b508091505092915050565b600060208201905081810360008301526118be81846117df565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061190d57607f821691505b6020821081036119205761191f6118c6565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026119887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261194b565b611992868361194b565b95508019841693508086168417925050509392505050565b6000819050919050565b60006119cf6119ca6119c584611075565b6119aa565b611075565b9050919050565b6000819050919050565b6119e9836119b4565b6119fd6119f5826119d6565b848454611958565b825550505050565b600090565b611a12611a05565b611a1d8184846119e0565b505050565b5b81811015611a4157611a36600082611a0a565b600181019050611a23565b5050565b601f821115611a8657611a5781611926565b611a608461193b565b81016020851015611a6f578190505b611a83611a7b8561193b565b830182611a22565b50505b505050565b600082821c905092915050565b6000611aa960001984600802611a8b565b1980831691505092915050565b6000611ac28383611a98565b9150826002028217905092915050565b611adb826113d3565b67ffffffffffffffff811115611af457611af3610ff5565b5b611afe82546118f5565b611b09828285611a45565b600060209050601f831160018114611b3c5760008415611b2a578287015190505b611b348582611ab6565b865550611b9c565b601f198416611b4a86611926565b60005b82811015611b7257848901518255600182019150602085019450602081019050611b4d565b86831015611b8f5784890151611b8b601f891682611a98565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611c2f6026836116c2565b9150611c3a82611bd3565b604082019050919050565b60006020820190508181036000830152611c5e81611c22565b9050919050565b7f5065726d697373696f6e3a206f6e6c7920617070726f76656400000000000000600082015250565b6000611c9b6019836116c2565b9150611ca682611c65565b602082019050919050565b60006020820190508181036000830152611cca81611c8e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611d076020836116c2565b9150611d1282611cd1565b602082019050919050565b60006020820190508181036000830152611d3681611cfa565b905091905056fea264697066735822122049efe7dfc29d44174056880faf2e4c7c42d63fe83030d08e5f90a411b4073e8764736f6c63430008110033";

type ListBusinessPostConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ListBusinessPostConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ListBusinessPost__factory extends ContractFactory {
  constructor(...args: ListBusinessPostConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ListBusinessPost> {
    return super.deploy(overrides || {}) as Promise<ListBusinessPost>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ListBusinessPost {
    return super.attach(address) as ListBusinessPost;
  }
  override connect(signer: Signer): ListBusinessPost__factory {
    return super.connect(signer) as ListBusinessPost__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ListBusinessPostInterface {
    return new utils.Interface(_abi) as ListBusinessPostInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ListBusinessPost {
    return new Contract(address, _abi, signerOrProvider) as ListBusinessPost;
  }
}
