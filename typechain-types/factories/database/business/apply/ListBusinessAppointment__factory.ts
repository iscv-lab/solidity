/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ListBusinessAppointment,
  ListBusinessAppointmentInterface,
} from "../../../../database/business/apply/ListBusinessAppointment";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessApplyId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "status",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct BusinessAppointment",
        name: "item",
        type: "tuple",
      },
    ],
    name: "Add",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessApplyId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "status",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct BusinessAppointment",
        name: "item",
        type: "tuple",
      },
    ],
    name: "Remove",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessApplyId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "status",
            type: "uint256",
          },
        ],
        internalType: "struct BusinessAppointment",
        name: "item",
        type: "tuple",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessApplyId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "status",
            type: "uint256",
          },
        ],
        internalType: "struct BusinessAppointment",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "destroy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAll",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessApplyId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "status",
            type: "uint256",
          },
        ],
        internalType: "struct BusinessAppointment[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "list",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "businessApplyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "businessId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "retrive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000072620000666200007860201b60201c565b6200008060201b60201c565b62000218565b600033905090565b62000090620000ea60201b60201c565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b3373ffffffffffffffffffffffffffffffffffffffff16620001116200016c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200016a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016190620001f6565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620001de60208362000195565b9150620001eb82620001a6565b602082019050919050565b600060208201905081810360008301526200021181620001cf565b9050919050565b610e7780620002286000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b14610111578063a5b7e4bd1461012f578063daea85c51461014b578063e0886f9014610167578063f2fde38b1461019757610093565b80632417450f1461009857806353ed5143146100b457806380c9419e146100d257806383197ef014610107575b600080fd5b6100b260048036038101906100ad919061081e565b6101b3565b005b6100bc610216565b6040516100c9919061098e565b60405180910390f35b6100ec60048036038101906100e791906109dc565b6102b1565b6040516100fe96959493929190610a18565b60405180910390f35b61010f6102fd565b005b61011961031e565b6040516101269190610a88565b60405180910390f35b61014960048036038101906101449190610bd4565b610347565b005b6101656004803603810190610160919061081e565b610402565b005b610181600480360381019061017c91906109dc565b610464565b60405161018e9190610c7c565b60405180910390f35b6101b160048036038101906101ac919061081e565b6104dc565b005b6101bb61055f565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156102a857838290600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001906001019061023a565b50505050905090565b600281815481106102c157600080fd5b90600052602060002090600602016000915090508060000154908060010154908060020154908060030154908060040154908060050154905086565b61030561055f565b3073ffffffffffffffffffffffffffffffffffffffff16ff5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61034f6105d6565b6002805490508160000181815250506002819080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015550507ff10c8232a4bdf5b5da9b097eb5792ae0aaa86af7b105a984dfe1b117b3ab3adf816040516103f79190610c7c565b60405180910390a150565b61040a61055f565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61046c61077b565b600282815481106104805761047f610c97565b5b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050919050565b6104e461055f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610553576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054a90610d49565b60405180910390fd5b61055c816106af565b50565b3373ffffffffffffffffffffffffffffffffffffffff1661057e61031e565b73ffffffffffffffffffffffffffffffffffffffff16146105d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cb90610db5565b60405180910390fd5b565b600160006105e2610773565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168061066e575061063861031e565b73ffffffffffffffffffffffffffffffffffffffff16610656610773565b73ffffffffffffffffffffffffffffffffffffffff16145b6106ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a490610e21565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000604051905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107eb826107c0565b9050919050565b6107fb816107e0565b811461080657600080fd5b50565b600081359050610818816107f2565b92915050565b600060208284031215610834576108336107bb565b5b600061084284828501610809565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61088a81610877565b82525050565b60c0820160008201516108a66000850182610881565b5060208201516108b96020850182610881565b5060408201516108cc6040850182610881565b5060608201516108df6060850182610881565b5060808201516108f26080850182610881565b5060a082015161090560a0850182610881565b50505050565b60006109178383610890565b60c08301905092915050565b6000602082019050919050565b600061093b8261084b565b6109458185610856565b935061095083610867565b8060005b83811015610981578151610968888261090b565b975061097383610923565b925050600181019050610954565b5085935050505092915050565b600060208201905081810360008301526109a88184610930565b905092915050565b6109b981610877565b81146109c457600080fd5b50565b6000813590506109d6816109b0565b92915050565b6000602082840312156109f2576109f16107bb565b5b6000610a00848285016109c7565b91505092915050565b610a1281610877565b82525050565b600060c082019050610a2d6000830189610a09565b610a3a6020830188610a09565b610a476040830187610a09565b610a546060830186610a09565b610a616080830185610a09565b610a6e60a0830184610a09565b979650505050505050565b610a82816107e0565b82525050565b6000602082019050610a9d6000830184610a79565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610af182610aa8565b810181811067ffffffffffffffff82111715610b1057610b0f610ab9565b5b80604052505050565b6000610b236107b1565b9050610b2f8282610ae8565b919050565b600060c08284031215610b4a57610b49610aa3565b5b610b5460c0610b19565b90506000610b64848285016109c7565b6000830152506020610b78848285016109c7565b6020830152506040610b8c848285016109c7565b6040830152506060610ba0848285016109c7565b6060830152506080610bb4848285016109c7565b60808301525060a0610bc8848285016109c7565b60a08301525092915050565b600060c08284031215610bea57610be96107bb565b5b6000610bf884828501610b34565b91505092915050565b60c082016000820151610c176000850182610881565b506020820151610c2a6020850182610881565b506040820151610c3d6040850182610881565b506060820151610c506060850182610881565b506080820151610c636080850182610881565b5060a0820151610c7660a0850182610881565b50505050565b600060c082019050610c916000830184610c01565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d33602683610cc6565b9150610d3e82610cd7565b604082019050919050565b60006020820190508181036000830152610d6281610d26565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d9f602083610cc6565b9150610daa82610d69565b602082019050919050565b60006020820190508181036000830152610dce81610d92565b9050919050565b7f5065726d697373696f6e3a206f6e6c7920617070726f76656400000000000000600082015250565b6000610e0b601983610cc6565b9150610e1682610dd5565b602082019050919050565b60006020820190508181036000830152610e3a81610dfe565b905091905056fea2646970667358221220cd1ecc88915e5b0766528d6d2a51160498b56677bd8b12b217696584ca13c45d64736f6c63430008110033";

type ListBusinessAppointmentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ListBusinessAppointmentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ListBusinessAppointment__factory extends ContractFactory {
  constructor(...args: ListBusinessAppointmentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ListBusinessAppointment> {
    return super.deploy(overrides || {}) as Promise<ListBusinessAppointment>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ListBusinessAppointment {
    return super.attach(address) as ListBusinessAppointment;
  }
  override connect(signer: Signer): ListBusinessAppointment__factory {
    return super.connect(signer) as ListBusinessAppointment__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ListBusinessAppointmentInterface {
    return new utils.Interface(_abi) as ListBusinessAppointmentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ListBusinessAppointment {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ListBusinessAppointment;
  }
}
