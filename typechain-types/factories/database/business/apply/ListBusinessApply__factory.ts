/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ListBusinessApply,
  ListBusinessApplyInterface,
} from "../../../../database/business/apply/ListBusinessApply";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "postId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "status",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct BusinessApply",
        name: "item",
        type: "tuple",
      },
    ],
    name: "Add",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "postId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "status",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct BusinessApply",
        name: "item",
        type: "tuple",
      },
    ],
    name: "Remove",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "postId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "status",
            type: "uint256",
          },
        ],
        internalType: "struct BusinessApply",
        name: "item",
        type: "tuple",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "postId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "status",
            type: "uint256",
          },
        ],
        internalType: "struct BusinessApply",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "destroy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAll",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "postId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "status",
            type: "uint256",
          },
        ],
        internalType: "struct BusinessApply[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "list",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "businessId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "retrive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
    ],
    name: "setStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000072620000666200007860201b60201c565b6200008060201b60201c565b62000218565b600033905090565b62000090620000ea60201b60201c565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b3373ffffffffffffffffffffffffffffffffffffffff16620001116200016c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200016a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016190620001f6565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620001de60208362000195565b9150620001eb82620001a6565b602082019050919050565b600060208201905081810360008301526200021181620001cf565b9050919050565b610f2480620002286000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610138578063a5b7e4bd14610156578063daea85c514610172578063e0886f901461018e578063f2fde38b146101be5761009e565b80632417450f146100a357806353ed5143146100bf57806380c9419e146100dd57806382e408131461011257806383197ef01461012e575b600080fd5b6100bd60048036038101906100b8919061088b565b6101da565b005b6100c761023d565b6040516100d491906109fb565b60405180910390f35b6100f760048036038101906100f29190610a49565b6102e0565b60405161010996959493929190610a85565b60405180910390f35b61012c60048036038101906101279190610ae6565b61032c565b005b610136610362565b005b610140610383565b60405161014d9190610b35565b60405180910390f35b610170600480360381019061016b9190610c81565b6103ac565b005b61018c6004803603810190610187919061088b565b610467565b005b6101a860048036038101906101a39190610a49565b6104c9565b6040516101b59190610d29565b60405180910390f35b6101d860048036038101906101d3919061088b565b610549565b005b6101e26105cc565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6060610247610643565b6002805480602002602001604051908101604052809291908181526020016000905b828210156102d757838290600052602060002090600602016040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152505081526020019060010190610269565b50505050905090565b600281815481106102f057600080fd5b90600052602060002090600602016000915090508060000154908060010154908060020154908060030154908060040154908060050154905086565b610334610643565b806002838154811061034957610348610d44565b5b9060005260206000209060060201600501819055505050565b61036a6105cc565b3073ffffffffffffffffffffffffffffffffffffffff16ff5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103b4610643565b6002805490508160000181815250506002819080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015550507ff10c8232a4bdf5b5da9b097eb5792ae0aaa86af7b105a984dfe1b117b3ab3adf8160405161045c9190610d29565b60405180910390a150565b61046f6105cc565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6104d16107e8565b6104d9610643565b600282815481106104ed576104ec610d44565b5b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050919050565b6105516105cc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b790610df6565b60405180910390fd5b6105c98161071c565b50565b3373ffffffffffffffffffffffffffffffffffffffff166105eb610383565b73ffffffffffffffffffffffffffffffffffffffff1614610641576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063890610e62565b60405180910390fd5b565b6001600061064f6107e0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16806106db57506106a5610383565b73ffffffffffffffffffffffffffffffffffffffff166106c36107e0565b73ffffffffffffffffffffffffffffffffffffffff16145b61071a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071190610ece565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000604051905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108588261082d565b9050919050565b6108688161084d565b811461087357600080fd5b50565b6000813590506108858161085f565b92915050565b6000602082840312156108a1576108a0610828565b5b60006108af84828501610876565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6108f7816108e4565b82525050565b60c08201600082015161091360008501826108ee565b50602082015161092660208501826108ee565b50604082015161093960408501826108ee565b50606082015161094c60608501826108ee565b50608082015161095f60808501826108ee565b5060a082015161097260a08501826108ee565b50505050565b600061098483836108fd565b60c08301905092915050565b6000602082019050919050565b60006109a8826108b8565b6109b281856108c3565b93506109bd836108d4565b8060005b838110156109ee5781516109d58882610978565b97506109e083610990565b9250506001810190506109c1565b5085935050505092915050565b60006020820190508181036000830152610a15818461099d565b905092915050565b610a26816108e4565b8114610a3157600080fd5b50565b600081359050610a4381610a1d565b92915050565b600060208284031215610a5f57610a5e610828565b5b6000610a6d84828501610a34565b91505092915050565b610a7f816108e4565b82525050565b600060c082019050610a9a6000830189610a76565b610aa76020830188610a76565b610ab46040830187610a76565b610ac16060830186610a76565b610ace6080830185610a76565b610adb60a0830184610a76565b979650505050505050565b60008060408385031215610afd57610afc610828565b5b6000610b0b85828601610a34565b9250506020610b1c85828601610a34565b9150509250929050565b610b2f8161084d565b82525050565b6000602082019050610b4a6000830184610b26565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b9e82610b55565b810181811067ffffffffffffffff82111715610bbd57610bbc610b66565b5b80604052505050565b6000610bd061081e565b9050610bdc8282610b95565b919050565b600060c08284031215610bf757610bf6610b50565b5b610c0160c0610bc6565b90506000610c1184828501610a34565b6000830152506020610c2584828501610a34565b6020830152506040610c3984828501610a34565b6040830152506060610c4d84828501610a34565b6060830152506080610c6184828501610a34565b60808301525060a0610c7584828501610a34565b60a08301525092915050565b600060c08284031215610c9757610c96610828565b5b6000610ca584828501610be1565b91505092915050565b60c082016000820151610cc460008501826108ee565b506020820151610cd760208501826108ee565b506040820151610cea60408501826108ee565b506060820151610cfd60608501826108ee565b506080820151610d1060808501826108ee565b5060a0820151610d2360a08501826108ee565b50505050565b600060c082019050610d3e6000830184610cae565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610de0602683610d73565b9150610deb82610d84565b604082019050919050565b60006020820190508181036000830152610e0f81610dd3565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e4c602083610d73565b9150610e5782610e16565b602082019050919050565b60006020820190508181036000830152610e7b81610e3f565b9050919050565b7f5065726d697373696f6e3a206f6e6c7920617070726f76656400000000000000600082015250565b6000610eb8601983610d73565b9150610ec382610e82565b602082019050919050565b60006020820190508181036000830152610ee781610eab565b905091905056fea264697066735822122080212ce51bd79280639dd6936a2a1392907fe2fc5cba9db772a308da3a1bec5364736f6c63430008110033";

type ListBusinessApplyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ListBusinessApplyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ListBusinessApply__factory extends ContractFactory {
  constructor(...args: ListBusinessApplyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ListBusinessApply> {
    return super.deploy(overrides || {}) as Promise<ListBusinessApply>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ListBusinessApply {
    return super.attach(address) as ListBusinessApply;
  }
  override connect(signer: Signer): ListBusinessApply__factory {
    return super.connect(signer) as ListBusinessApply__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ListBusinessApplyInterface {
    return new utils.Interface(_abi) as ListBusinessApplyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ListBusinessApply {
    return new Contract(address, _abi, signerOrProvider) as ListBusinessApply;
  }
}
