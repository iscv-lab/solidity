/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ListEmployeeCV,
  ListEmployeeCVInterface,
} from "../../../../database/employee/cv/ListEmployeeCV";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct EmployeeCV",
        name: "item",
        type: "tuple",
      },
    ],
    name: "Add",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct EmployeeCV",
        name: "item",
        type: "tuple",
      },
    ],
    name: "Remove",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
        ],
        internalType: "struct EmployeeCV",
        name: "item",
        type: "tuple",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
        ],
        internalType: "struct EmployeeCV",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "destroy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "list",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "source",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "retrive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000072620000666200007860201b60201c565b6200008060201b60201c565b62000218565b600033905090565b62000090620000ea60201b60201c565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b3373ffffffffffffffffffffffffffffffffffffffff16620001116200016c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200016a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016190620001f6565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620001de60208362000195565b9150620001eb82620001a6565b602082019050919050565b600060208201905081810360008301526200021181620001cf565b9050919050565b61118b80620002286000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063daea85c51161005b578063daea85c514610104578063e0886f9014610120578063f2fde38b14610150578063f44409761461016c57610088565b80632417450f1461008d57806380c9419e146100a957806383197ef0146100dc5780638da5cb5b146100e6575b600080fd5b6100a760048036038101906100a2919061083f565b610188565b005b6100c360048036038101906100be91906108a2565b6101eb565b6040516100d3949392919061096e565b60405180910390f35b6100e46102b3565b005b6100ee6102d4565b6040516100fb91906109c9565b60405180910390f35b61011e6004803603810190610119919061083f565b6102fd565b005b61013a600480360381019061013591906108a2565b61035f565b6040516101479190610aa0565b60405180910390f35b61016a6004803603810190610165919061083f565b610453565b005b61018660048036038101906101819190610c95565b6104d6565b005b610190610589565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600281815481106101fb57600080fd5b906000526020600020906004020160009150905080600001549080600101549080600201549080600301805461023090610d0d565b80601f016020809104026020016040519081016040528092919081815260200182805461025c90610d0d565b80156102a95780601f1061027e576101008083540402835291602001916102a9565b820191906000526020600020905b81548152906001019060200180831161028c57829003601f168201915b5050505050905084565b6102bb610589565b3073ffffffffffffffffffffffffffffffffffffffff16ff5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610305610589565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6103676107a5565b61036f610600565b6002828154811061038357610382610d3e565b5b90600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820180546103ca90610d0d565b80601f01602080910402602001604051908101604052809291908181526020018280546103f690610d0d565b80156104435780601f1061041857610100808354040283529160200191610443565b820191906000526020600020905b81548152906001019060200180831161042657829003601f168201915b5050505050815250509050919050565b61045b610589565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c190610ddf565b60405180910390fd5b6104d3816106d9565b50565b6104de610600565b6002805490508160000181815250506002819080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301908161054c9190610fab565b5050507fa3be13d0d66ad2a9cc793fa2c8efcab3dc5776a3032ee2cb813702b574c3aaee8160405161057e9190610aa0565b60405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff166105a86102d4565b73ffffffffffffffffffffffffffffffffffffffff16146105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f5906110c9565b60405180910390fd5b565b6001600061060c61079d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168061069857506106626102d4565b73ffffffffffffffffffffffffffffffffffffffff1661068061079d565b73ffffffffffffffffffffffffffffffffffffffff16145b6106d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ce90611135565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060800160405280600081526020016000815260200160008152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061080c826107e1565b9050919050565b61081c81610801565b811461082757600080fd5b50565b60008135905061083981610813565b92915050565b600060208284031215610855576108546107d7565b5b60006108638482850161082a565b91505092915050565b6000819050919050565b61087f8161086c565b811461088a57600080fd5b50565b60008135905061089c81610876565b92915050565b6000602082840312156108b8576108b76107d7565b5b60006108c68482850161088d565b91505092915050565b6108d88161086c565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109185780820151818401526020810190506108fd565b60008484015250505050565b6000601f19601f8301169050919050565b6000610940826108de565b61094a81856108e9565b935061095a8185602086016108fa565b61096381610924565b840191505092915050565b600060808201905061098360008301876108cf565b61099060208301866108cf565b61099d60408301856108cf565b81810360608301526109af8184610935565b905095945050505050565b6109c381610801565b82525050565b60006020820190506109de60008301846109ba565b92915050565b6109ed8161086c565b82525050565b600082825260208201905092915050565b6000610a0f826108de565b610a1981856109f3565b9350610a298185602086016108fa565b610a3281610924565b840191505092915050565b6000608083016000830151610a5560008601826109e4565b506020830151610a6860208601826109e4565b506040830151610a7b60408601826109e4565b5060608301518482036060860152610a938282610a04565b9150508091505092915050565b60006020820190508181036000830152610aba8184610a3d565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610aff82610924565b810181811067ffffffffffffffff82111715610b1e57610b1d610ac7565b5b80604052505050565b6000610b316107cd565b9050610b3d8282610af6565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115610b6c57610b6b610ac7565b5b610b7582610924565b9050602081019050919050565b82818337600083830152505050565b6000610ba4610b9f84610b51565b610b27565b905082815260208101848484011115610bc057610bbf610b4c565b5b610bcb848285610b82565b509392505050565b600082601f830112610be857610be7610b47565b5b8135610bf8848260208601610b91565b91505092915050565b600060808284031215610c1757610c16610ac2565b5b610c216080610b27565b90506000610c318482850161088d565b6000830152506020610c458482850161088d565b6020830152506040610c598482850161088d565b604083015250606082013567ffffffffffffffff811115610c7d57610c7c610b42565b5b610c8984828501610bd3565b60608301525092915050565b600060208284031215610cab57610caa6107d7565b5b600082013567ffffffffffffffff811115610cc957610cc86107dc565b5b610cd584828501610c01565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d2557607f821691505b602082108103610d3857610d37610cde565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610dc96026836108e9565b9150610dd482610d6d565b604082019050919050565b60006020820190508181036000830152610df881610dbc565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610e617fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610e24565b610e6b8683610e24565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610ea8610ea3610e9e8461086c565b610e83565b61086c565b9050919050565b6000819050919050565b610ec283610e8d565b610ed6610ece82610eaf565b848454610e31565b825550505050565b600090565b610eeb610ede565b610ef6818484610eb9565b505050565b5b81811015610f1a57610f0f600082610ee3565b600181019050610efc565b5050565b601f821115610f5f57610f3081610dff565b610f3984610e14565b81016020851015610f48578190505b610f5c610f5485610e14565b830182610efb565b50505b505050565b600082821c905092915050565b6000610f8260001984600802610f64565b1980831691505092915050565b6000610f9b8383610f71565b9150826002028217905092915050565b610fb4826108de565b67ffffffffffffffff811115610fcd57610fcc610ac7565b5b610fd78254610d0d565b610fe2828285610f1e565b600060209050601f8311600181146110155760008415611003578287015190505b61100d8582610f8f565b865550611075565b601f19841661102386610dff565b60005b8281101561104b57848901518255600182019150602085019450602081019050611026565b868310156110685784890151611064601f891682610f71565b8355505b6001600288020188555050505b505050505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006110b36020836108e9565b91506110be8261107d565b602082019050919050565b600060208201905081810360008301526110e2816110a6565b9050919050565b7f5065726d697373696f6e3a206f6e6c7920617070726f76656400000000000000600082015250565b600061111f6019836108e9565b915061112a826110e9565b602082019050919050565b6000602082019050818103600083015261114e81611112565b905091905056fea2646970667358221220be26849110627fd68746fe83a651912e203315d921e759e1fe2592874b00521b64736f6c63430008110033";

type ListEmployeeCVConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ListEmployeeCVConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ListEmployeeCV__factory extends ContractFactory {
  constructor(...args: ListEmployeeCVConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ListEmployeeCV> {
    return super.deploy(overrides || {}) as Promise<ListEmployeeCV>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ListEmployeeCV {
    return super.attach(address) as ListEmployeeCV;
  }
  override connect(signer: Signer): ListEmployeeCV__factory {
    return super.connect(signer) as ListEmployeeCV__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ListEmployeeCVInterface {
    return new utils.Interface(_abi) as ListEmployeeCVInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ListEmployeeCV {
    return new Contract(address, _abi, signerOrProvider) as ListEmployeeCV;
  }
}
