/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  EmployeeController,
  EmployeeControllerInterface,
} from "../../../controller/employee/EmployeeController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "listEmployeeAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "listEmployeeSkillAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "listEmployeeApplyAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "listBigFiveAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "AddBigFive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
    ],
    name: "_checkApplyIdBelongsToEmployeeId",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "postId",
        type: "string",
      },
    ],
    name: "_checkExistApply",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_checkExistEmployeeAccount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "_checkExistSkill",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "postId",
        type: "string",
      },
    ],
    name: "_checkIdBelongsToPostId",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "addBigFive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "phone",
        type: "string",
      },
      {
        internalType: "string",
        name: "professional",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "github",
        type: "string",
      },
      {
        internalType: "string",
        name: "linkedin",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceImage",
        type: "string",
      },
    ],
    name: "addEmployee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "addSkill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "businessId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "postId",
        type: "string",
      },
    ],
    name: "applyPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "destroy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skillId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "editSkill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllProfile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "phone",
            type: "string",
          },
          {
            internalType: "string",
            name: "professional",
            type: "string",
          },
          {
            internalType: "string",
            name: "email",
            type: "string",
          },
          {
            internalType: "string",
            name: "github",
            type: "string",
          },
          {
            internalType: "string",
            name: "linkedin",
            type: "string",
          },
          {
            internalType: "string",
            name: "sourceImage",
            type: "string",
          },
        ],
        internalType: "struct Profile[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllSkill",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
        ],
        internalType: "struct EmployeeSkill[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBigFives",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "cid",
            type: "string",
          },
        ],
        internalType: "struct BigFive[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListAppliesPost",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "postId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "status",
            type: "uint256",
          },
        ],
        internalType: "struct BusinessApply[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getProfile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "phone",
            type: "string",
          },
          {
            internalType: "string",
            name: "professional",
            type: "string",
          },
          {
            internalType: "string",
            name: "email",
            type: "string",
          },
          {
            internalType: "string",
            name: "github",
            type: "string",
          },
          {
            internalType: "string",
            name: "linkedin",
            type: "string",
          },
          {
            internalType: "string",
            name: "sourceImage",
            type: "string",
          },
        ],
        internalType: "struct Profile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
    ],
    name: "isDiffSevenDays",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
    ],
    name: "startStartSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002381380380620023818339810160408190526200003491620000af565b60008054336001600160a01b0319918216179091556001805482166001600160a01b0396871617905560028054821694861694909417909355600380548416928516929092179091556004805490921692169190911790556200010c565b80516001600160a01b0381168114620000aa57600080fd5b919050565b60008060008060808587031215620000c657600080fd5b620000d18562000092565b9350620000e16020860162000092565b9250620000f16040860162000092565b9150620001016060860162000092565b905092959194509250565b612265806200011c6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80638da5cb5b116100ad578063ec40a59b11610071578063ec40a59b1461026c578063f08f4f6414610274578063f2fde38b14610294578063f3d27186146102a7578063fa7e59dd146102ba57600080fd5b80638da5cb5b14610203578063928019cb1461021e578063b08026ea14610231578063c1fa897d14610246578063e583267d1461025957600080fd5b806355a7608b116100f457806355a7608b146101af57806364f3fe9d146101c25780636be67cf5146101d55780637df65cc6146101e857806383197ef0146101fb57600080fd5b80631f34377d146101315780631fe1d4631461014f57806333c7f304146101645780633901d42d14610177578063551f755a1461018c575b600080fd5b6101396102cf565b60405161014691906113db565b60405180910390f35b61016261015d36600461154b565b61034d565b005b61016261017236600461159a565b610499565b61017f6105b6565b6040516101469190611796565b61019f61019a3660046117eb565b61062f565b6040519015158152602001610146565b6101626101bd366004611804565b610724565b61019f6101d0366004611853565b610843565b6101626101e3366004611875565b6108dc565b61019f6101f6366004611875565b610a21565b610162610abc565b6000546040516001600160a01b039091168152602001610146565b61016261022c3660046117eb565b610ac7565b610239610bc8565b60405161014691906118f8565b61019f610254366004611875565b610c41565b61016261026736600461194d565b610cce565b61019f610df3565b6102876102823660046117eb565b610e7f565b6040516101469190611979565b6101626102a23660046119a1565b610f48565b61019f6102b5366004611875565b610fc1565b6102c26110be565b60405161014691906119f9565b60606102e36003546001600160a01b031690565b6001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa158015610320573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103489190810190611b4c565b905090565b82610356610df3565b61037b5760405162461bcd60e51b815260040161037290611bfc565b60405180910390fd5b61038481611137565b6103a05760405162461bcd60e51b815260040161037290611c41565b83836103ac8282610c41565b1561040e5760405162461bcd60e51b815260206004820152602c60248201527f456d706c6f79656520536b696c6c20437572736f723a20616c7265616479206560448201526b1e1a5cdd1959081cdada5b1b60a21b6064820152608401610372565b60408051608081018252878152600060208201528082018790526060810186905260025491516331dd135b60e11b815290916001600160a01b0316906363ba26b69061045e908490600401611c90565b600060405180830381600087803b15801561047857600080fd5b505af115801561048c573d6000803e3d6000fd5b5050505050505050505050565b6104a1610df3565b156105025760405162461bcd60e51b815260206004820152602b60248201527f4c697374456d706c6f796565437572736f723a20616c7265616479206578697360448201526a1d1959081858d8dbdd5b9d60aa1b6064820152608401610372565b60408051610120810182526000815233602082018190528183018a9052606082018990526080820188905260a0820187905260c0820186905260e08201859052610100820184905260015492516326ee2f0d60e01b815290926001600160a01b0316906326ee2f0d90610579908490600401611979565b600060405180830381600087803b15801561059357600080fd5b505af11580156105a7573d6000803e3d6000fd5b50505050505050505050505050565b60606105ca6001546001600160a01b031690565b6001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa158015610607573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103489190810190611df8565b60048054604080516353ed514360e01b81529051600093429385936001600160a01b03909116926353ed51439282810192869291908290030181865afa15801561067d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106a59190810190611e9b565b905060005b81518110156107195760008282815181106106c7576106c7611f93565b602002602001015190508060200151861480156106f5575062093a808160400151856106f39190611fbf565b105b156107065750600095945050505050565b508061071181611fd2565b9150506106aa565b506001949350505050565b8261072d610df3565b6107495760405162461bcd60e51b815260040161037290611bfc565b61075281611137565b61076e5760405162461bcd60e51b815260040161037290611c41565b838261077a8282610fc1565b156107d35760405162461bcd60e51b8152602060048201526024808201527f4c697374427573696e6573734170706c79437572736f723a20686164206170706044820152631b1a595960e21b6064820152608401610372565b60006040518060c0016040528060008152602001888152602001878152602001868152602001428152602001600081525090506108186003546001600160a01b031690565b6001600160a01b0316632e6de701826040518263ffffffff1660e01b815260040161045e9190611feb565b600354604051630e0886f960e41b81526004810184905260009182916001600160a01b039091169063e0886f9090602401600060405180830381865afa158015610891573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108b99190810190611ffe565b6020015190508083036108d05760019150506108d6565b60009150505b92915050565b816108e5610df3565b6109015760405162461bcd60e51b815260040161037290611bfc565b61090a81611137565b6109265760405162461bcd60e51b815260040161037290611c41565b826109308161062f565b61094c5760405162461bcd60e51b815260040161037290612032565b60006040518060800160405280600081526020018681526020014281526020018581525090506109846004546001600160a01b031690565b6001600160a01b031663f4440976826040518263ffffffff1660e01b81526004016109af919061207a565b600060405180830381600087803b1580156109c957600080fd5b505af11580156109dd573d6000803e3d6000fd5b505050507f4fe2b65ff7a29e5d52666c515fb7cb1bdd1702cf2e222090449ad101f2b08b8c8585604051610a1292919061208d565b60405180910390a15050505050565b600354604051630e0886f960e41b81526004810184905260009182916001600160a01b039091169063e0886f9090602401600060405180830381865afa158015610a6f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a979190810190611ffe565b60600151905080805190602001208380519060200120036108d05760019150506108d6565b610ac46111c4565b30ff5b80610ad0610df3565b610aec5760405162461bcd60e51b815260040161037290611bfc565b610af581611137565b610b115760405162461bcd60e51b815260040161037290611c41565b81610b1b8161062f565b610b375760405162461bcd60e51b815260040161037290612032565b60408051608081018252600080825260208083018790524283850152835190810184529081526060820152600480549251637a2204bb60e11b815291926001600160a01b03169163f444097691610b909185910161207a565b600060405180830381600087803b158015610baa57600080fd5b505af1158015610bbe573d6000803e3d6000fd5b5050505050505050565b6060610bdc6002546001600160a01b031690565b6001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa158015610c19573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610348919081019061210b565b60025460405163025f547760e41b815260009182916001600160a01b03909116906325f5477090610c78908790879060040161208d565b602060405180830381865afa158015610c95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb991906121ae565b905060001981146108d05760019150506108d6565b82610cd7610df3565b610cf35760405162461bcd60e51b815260040161037290611bfc565b610cfc81611137565b610d185760405162461bcd60e51b815260040161037290611c41565b8284610d24828261122f565b610d7c5760405162461bcd60e51b8152602060048201526024808201527f456d706c6f79656520536b696c6c20437572736f723a207265717565737420736044820152631ada5b1b60e21b6064820152608401610372565b6002546001600160a01b03166040516338549d9b60e11b815260048101879052602481018690526001600160a01b0391909116906370a93b3690604401600060405180830381600087803b158015610dd357600080fd5b505af1158015610de7573d6000803e3d6000fd5b50505050505050505050565b600154604051630689388760e41b815233600482015260009182916001600160a01b0390911690636893887090602401602060405180830381865afa158015610e40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6491906121ae565b90506000198103610e7757600091505090565b600191505090565b610ed76040518061012001604052806000815260200160006001600160a01b03168152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600154604051630e0886f960e41b8152600481018490526001600160a01b039091169063e0886f9090602401600060405180830381865afa158015610f20573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108d691908101906121c7565b610f506111c4565b6001600160a01b038116610fb55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610372565b610fbe816112bc565b50565b600080600360009054906101000a90046001600160a01b03166001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa158015611017573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261103f9190810190611b4c565b905060005b81518110156110b357600082828151811061106157611061611f93565b6020026020010151905085816020015114801561108f57508480519060200120816060015180519060200120145b156110a057600193505050506108d6565b50806110ab81611fd2565b915050611044565b506000949350505050565b60606110d26004546001600160a01b031690565b6001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa15801561110f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103489190810190611e9b565b600154604051630e0886f960e41b81526004810183905260009182916001600160a01b039091169063e0886f9090602401600060405180830381865afa158015611185573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111ad91908101906121c7565b90506111bd81602001513361130c565b9392505050565b336111d76000546001600160a01b031690565b6001600160a01b03161461122d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610372565b565b600254604051630e0886f960e41b81526004810184905260009182916001600160a01b039091169063e0886f9090602401600060405180830381865afa15801561127d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a591908101906121fb565b6020015190508281036108d05760019150506108d6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000816001600160a01b0316836001600160a01b03160361132f575060016108d6565b50600092915050565b60005b8381101561135357818101518382015260200161133b565b50506000910152565b60008151808452611374816020860160208601611338565b601f01601f19169290920160200192915050565b8051825260208101516020830152604081015160408301526000606082015160c060608501526113bb60c085018261135c565b90506080830151608085015260a083015160a08501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561143057603f1988860301845261141e858351611388565b94509285019290850190600101611402565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b03811182821017156114765761147661143d565b60405290565b604051608081016001600160401b03811182821017156114765761147661143d565b604051601f8201601f191681016001600160401b03811182821017156114c6576114c661143d565b604052919050565b60006001600160401b038211156114e7576114e761143d565b50601f01601f191660200190565b600082601f83011261150657600080fd5b8135611519611514826114ce565b61149e565b81815284602083860101111561152e57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561156057600080fd5b8335925060208401356001600160401b0381111561157d57600080fd5b611589868287016114f5565b925050604084013590509250925092565b600080600080600080600060e0888a0312156115b557600080fd5b87356001600160401b03808211156115cc57600080fd5b6115d88b838c016114f5565b985060208a01359150808211156115ee57600080fd5b6115fa8b838c016114f5565b975060408a013591508082111561161057600080fd5b61161c8b838c016114f5565b965060608a013591508082111561163257600080fd5b61163e8b838c016114f5565b955060808a013591508082111561165457600080fd5b6116608b838c016114f5565b945060a08a013591508082111561167657600080fd5b6116828b838c016114f5565b935060c08a013591508082111561169857600080fd5b506116a58a828b016114f5565b91505092959891949750929550565b60006101208251845260208301516116d760208601826001600160a01b03169052565b5060408301518160408601526116ef8286018261135c565b91505060608301518482036060860152611709828261135c565b91505060808301518482036080860152611723828261135c565b91505060a083015184820360a086015261173d828261135c565b91505060c083015184820360c0860152611757828261135c565b91505060e083015184820360e0860152611771828261135c565b915050610100808401518583038287015261178c838261135c565b9695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561143057603f198886030184526117d98583516116b4565b945092850192908501906001016117bd565b6000602082840312156117fd57600080fd5b5035919050565b60008060006060848603121561181957600080fd5b833592506020840135915060408401356001600160401b0381111561183d57600080fd5b611849868287016114f5565b9150509250925092565b6000806040838503121561186657600080fd5b50508035926020909101359150565b6000806040838503121561188857600080fd5b8235915060208301356001600160401b038111156118a557600080fd5b6118b1858286016114f5565b9150509250929050565b805182526020810151602083015260006040820151608060408501526118e4608085018261135c565b606093840151949093019390935250919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561143057603f1988860301845261193b8583516118bb565b9450928501929085019060010161191f565b60008060006060848603121561196257600080fd5b505081359360208301359350604090920135919050565b6020815260006111bd60208301846116b4565b6001600160a01b0381168114610fbe57600080fd5b6000602082840312156119b357600080fd5b81356111bd8161198c565b80518252602081015160208301526040810151604083015260006060820151608060608501526119f1608085018261135c565b949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561143057603f19888603018452611a3c8583516119be565b94509285019290850190600101611a20565b60006001600160401b03821115611a6757611a6761143d565b5060051b60200190565b600082601f830112611a8257600080fd5b8151611a90611514826114ce565b818152846020838601011115611aa557600080fd5b6119f1826020830160208701611338565b600060c08284031215611ac857600080fd5b60405160c081016001600160401b038282108183111715611aeb57611aeb61143d565b816040528293508451835260208501516020840152604085015160408401526060850151915080821115611b1e57600080fd5b50611b2b85828601611a71565b6060830152506080830151608082015260a083015160a08201525092915050565b60006020808385031215611b5f57600080fd5b82516001600160401b0380821115611b7657600080fd5b818501915085601f830112611b8a57600080fd5b8151611b9861151482611a4e565b81815260059190911b83018401908481019088831115611bb757600080fd5b8585015b83811015611bef57805185811115611bd35760008081fd5b611be18b89838a0101611ab6565b845250918601918601611bbb565b5098975050505050505050565b60208082526025908201527f4c697374456d706c6f796565437572736f723a206e6f7420657869737420616360408201526418dbdd5b9d60da1b606082015260800190565b6020808252602f908201527f4c697374456d706c6f796565437572736f723a206964206973206e6f7420626560408201526e6c6f6e6720746f206164647265737360881b606082015260800190565b6020815260006111bd60208301846118bb565b8051611cae8161198c565b919050565b60006101208284031215611cc657600080fd5b611cce611453565b905081518152611ce060208301611ca3565b602082015260408201516001600160401b0380821115611cff57600080fd5b611d0b85838601611a71565b60408401526060840151915080821115611d2457600080fd5b611d3085838601611a71565b60608401526080840151915080821115611d4957600080fd5b611d5585838601611a71565b608084015260a0840151915080821115611d6e57600080fd5b611d7a85838601611a71565b60a084015260c0840151915080821115611d9357600080fd5b611d9f85838601611a71565b60c084015260e0840151915080821115611db857600080fd5b611dc485838601611a71565b60e084015261010091508184015181811115611ddf57600080fd5b611deb86828701611a71565b8385015250505092915050565b60006020808385031215611e0b57600080fd5b82516001600160401b0380821115611e2257600080fd5b818501915085601f830112611e3657600080fd5b8151611e4461151482611a4e565b81815260059190911b83018401908481019088831115611e6357600080fd5b8585015b83811015611bef57805185811115611e7f5760008081fd5b611e8d8b89838a0101611cb3565b845250918601918601611e67565b60006020808385031215611eae57600080fd5b82516001600160401b0380821115611ec557600080fd5b818501915085601f830112611ed957600080fd5b8151611ee761151482611a4e565b81815260059190911b83018401908481019088831115611f0657600080fd5b8585015b83811015611bef57805185811115611f225760008081fd5b86016080818c03601f1901811315611f3a5760008081fd5b611f4261147c565b828a01518152604080840151828c015260608085015182840152928401519289841115611f7157600091508182fd5b611f7f8f8d86880101611a71565b908301525085525050918601918601611f0a565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156108d6576108d6611fa9565b600060018201611fe457611fe4611fa9565b5060010190565b6020815260006111bd6020830184611388565b60006020828403121561201057600080fd5b81516001600160401b0381111561202657600080fd5b6119f184828501611ab6565b60208082526028908201527f4c69737442696746697665437572736f723a20206e6f7420646966666572656e604082015267742037206461797360c01b606082015260800190565b6020815260006111bd60208301846119be565b8281526040602082015260006119f1604083018461135c565b6000608082840312156120b857600080fd5b6120c061147c565b9050815181526020820151602082015260408201516001600160401b038111156120e957600080fd5b6120f584828501611a71565b6040830152506060820151606082015292915050565b6000602080838503121561211e57600080fd5b82516001600160401b038082111561213557600080fd5b818501915085601f83011261214957600080fd5b815161215761151482611a4e565b81815260059190911b8301840190848101908883111561217657600080fd5b8585015b83811015611bef578051858111156121925760008081fd5b6121a08b89838a01016120a6565b84525091860191860161217a565b6000602082840312156121c057600080fd5b5051919050565b6000602082840312156121d957600080fd5b81516001600160401b038111156121ef57600080fd5b6119f184828501611cb3565b60006020828403121561220d57600080fd5b81516001600160401b0381111561222357600080fd5b6119f1848285016120a656fea2646970667358221220a5dc64931789e9182bd164e6771b14f9d0840fa77c30ddd7e1e09ac1fc99a8f764736f6c63430008110033";

type EmployeeControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EmployeeControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EmployeeController__factory extends ContractFactory {
  constructor(...args: EmployeeControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    listEmployeeAddress: PromiseOrValue<string>,
    listEmployeeSkillAddress: PromiseOrValue<string>,
    listEmployeeApplyAddress: PromiseOrValue<string>,
    listBigFiveAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EmployeeController> {
    return super.deploy(
      listEmployeeAddress,
      listEmployeeSkillAddress,
      listEmployeeApplyAddress,
      listBigFiveAddress,
      overrides || {}
    ) as Promise<EmployeeController>;
  }
  override getDeployTransaction(
    listEmployeeAddress: PromiseOrValue<string>,
    listEmployeeSkillAddress: PromiseOrValue<string>,
    listEmployeeApplyAddress: PromiseOrValue<string>,
    listBigFiveAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      listEmployeeAddress,
      listEmployeeSkillAddress,
      listEmployeeApplyAddress,
      listBigFiveAddress,
      overrides || {}
    );
  }
  override attach(address: string): EmployeeController {
    return super.attach(address) as EmployeeController;
  }
  override connect(signer: Signer): EmployeeController__factory {
    return super.connect(signer) as EmployeeController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EmployeeControllerInterface {
    return new utils.Interface(_abi) as EmployeeControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EmployeeController {
    return new Contract(address, _abi, signerOrProvider) as EmployeeController;
  }
}
