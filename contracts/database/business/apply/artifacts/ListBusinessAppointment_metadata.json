{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "businessApplyId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "employeeId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "businessId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "time",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "status",
								"type": "uint256"
							}
						],
						"indexed": false,
						"internalType": "struct BusinessAppointment",
						"name": "item",
						"type": "tuple"
					}
				],
				"name": "Add",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "businessApplyId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "employeeId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "businessId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "time",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "status",
								"type": "uint256"
							}
						],
						"indexed": false,
						"internalType": "struct BusinessAppointment",
						"name": "item",
						"type": "tuple"
					}
				],
				"name": "Remove",
				"type": "event"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "businessApplyId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "employeeId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "businessId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "time",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "status",
								"type": "uint256"
							}
						],
						"internalType": "struct BusinessAppointment",
						"name": "item",
						"type": "tuple"
					}
				],
				"name": "add",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "approve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "at",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "businessApplyId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "employeeId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "businessId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "time",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "status",
								"type": "uint256"
							}
						],
						"internalType": "struct BusinessAppointment",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "destroy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "list",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "businessApplyId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "employeeId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "businessId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "status",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"database/business/apply/ListBusinessAppointment.sol": "ListBusinessAppointment"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"abstract/Ownable.sol": {
			"keccak256": "0x03e8be28dacbc0d83f761b94d10e85750e8d37082a65836e2ec97b9018a7c2c6",
			"license": "MIT",
			"urls": [
				"bzz-raw://2522b935ab51e9f90b36afb755ed7a7ff5bd48a9c5e0df5bd0f28914d4e7b7c6",
				"dweb:/ipfs/QmQC1eh1tj6TEM4eT5HEZwCBiQ75AECmHC1ojo39hMQrE8"
			]
		},
		"abstract/Permission.sol": {
			"keccak256": "0x2d06398c09730b07a537e83026b2982364f34c4f7c1b5432230c636d2b9b9cbb",
			"license": "MIT",
			"urls": [
				"bzz-raw://f6c209eec91528c7a3b3b0db65583ebd3497209a72742d727a8fcab87dfc7fdb",
				"dweb:/ipfs/QmYsCPauyHq4RuZggcw3GoVeC7wRRWtbagHqxqYRU6ue75"
			]
		},
		"database/business/apply/ListBusinessAppointment.sol": {
			"keccak256": "0xbbc72e627afa1e8b48012a73f45ab44a932fce4d2dc55a468931c1cd5d881262",
			"license": "MIT",
			"urls": [
				"bzz-raw://91481cf7676426e49ce79ded0c76f50d52cb9e21e244d7accd42a07c6ac511b3",
				"dweb:/ipfs/QmZb45mHo55McsiF5TGzAsnWCQUYL9zKLiDLoWP6CBUo2h"
			]
		},
		"struct/business/apply/BusinessAppointmentStruct.sol": {
			"keccak256": "0xa638f5d1aad26ba59cc203b16bd6d2a1c353ccd2260701211378b6e8898e40e0",
			"license": "MIT",
			"urls": [
				"bzz-raw://8017826e46625fa4447abe0fad330913fe91497355f930768fe5a418e8ba723e",
				"dweb:/ipfs/QmXeHsaahQ83evGZK4spThehFdXbckBp4Yi3QZtMszXtuo"
			]
		}
	},
	"version": 1
}